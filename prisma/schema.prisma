generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id            String        @id @default(uuid())
  name          String?
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  isTest        Boolean       @default(false)
  balance       Float         @default(1000000)
  accounts      Account[]
  holding       holding[]
  sessions      Session[]
  transactions  transaction[]
}

model stock {
  id     String @id @default(uuid())
  symbol String @unique
  price  Float
}

model holding {
  id           String    @id @default(cuid())
  quantity     Int
  buy_price    Float
  stock_symbol String
  start_date   DateTime  @default(now())
  end_date     DateTime?
  uid          String
  free_balance Float
  user         user      @relation(fields: [uid], references: [id], onDelete: Cascade)
}

model transaction {
  id           String   @id @default(uuid())
  timestamp    DateTime @default(now())
  stock_symbol String
  unit_price   Float
  quantity     Float
  is_buy       Boolean  @default(true)
  free_balance Float
  uid          String
  user         user     @relation(fields: [uid], references: [id], onDelete: Cascade)
}

model stockTimeVal {
  id           String   @id @default(uuid())
  timestamp    DateTime @default(now())
  stock_symbol String
  price        Float
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              user    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         user     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
